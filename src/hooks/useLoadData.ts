import { useEffect, useState } from "react";
import { Platform } from "react-native";

// ‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î BASE_URL ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á iOS ‡πÅ‡∏•‡∏∞ Android
const BASE_URL =
  Platform.OS === "ios"
    ? "http://localhost:3000/"
    : "http://10.0.2.2:3000/";

// ‚úÖ Hook ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
export const useLoadData = <T,>(endpoint: string) => {
  const [data, setData] = useState<T[]>([]);
  const [loading, setLoading] = useState<boolean>(true);
  const [error, setError] = useState<string | null>(null); // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° state error

  const fetchData = async () => {
    try {
      setLoading(true);
      setError(null); // ‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï error ‡∏Å‡πà‡∏≠‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
      const response = await fetch(`${BASE_URL}${endpoint}`);
      if (!response.ok) throw new Error(`Failed to fetch ${endpoint}`);

      const result: T[] = await response.json();
      setData(result);
    } catch (err: any) {
      setError(err.message || "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");
    } finally {
      setLoading(false);
    }
  };
  useEffect(() => {
    fetchData();
  }, [endpoint]);

  return { data, loading, error, reloadData: fetchData };
};

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏à‡∏≤‡∏Å `id`
export const fetchProductById = async (id: string) => {
  try {
    console.log(`üîç Fetching product: ${BASE_URL}products/${id}`);
    const response = await fetch(`${BASE_URL}products/${id}`);
    if (!response.ok) {
      throw new Error("‚ùå Failed to fetch product details");
    }
    return await response.json();
  } catch (error) {
    console.error("üö® Error fetching product by ID:", error);
    throw error;
  }
};

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Like ‡∏Ç‡∏≠‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
export const updateProductLikeStatus = async (id: string, isLiked: boolean) => {
  try {
    const response = await fetch(`${BASE_URL}products/${id}`, {
      method: "PATCH",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ liked: isLiked }),
    });

    if (!response.ok) {
      throw new Error("‚ùå Failed to update like status");
    }
  } catch (error) {
    console.error("üö® Error updating like status:", error);
    throw error;
  }
};
